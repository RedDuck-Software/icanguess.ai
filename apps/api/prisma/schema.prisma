// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  wallet    String  @id @unique
  roles     Role[]  @default([])
  isBlocked Boolean @default(false)

  createdAt DateTime    @default(now()) @map("created_at")
  updatedAt DateTime    @updatedAt @map("updated_at")
  UserRound UserRound[]

  @@map("user")
}

model Round {
  id String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid

  roundId  Int
  contract String
  words    String?

  createdAt DateTime    @default(now()) @map("created_at")
  updatedAt DateTime    @updatedAt @map("updated_at")
  UserRound UserRound[]

  @@map("round")
}

model UserRound {
  attemptsBought Int @default(0)
  attemptsUsed   Int @default(0)

  user           User             @relation(fields: [userWallet], references: [wallet])
  round          Round            @relation(fields: [roundId], references: [id])
  userWallet     String
  roundId        String           @db.Uuid
  userRoundGuess UserRoundGuess[]

  @@id([userWallet, roundId])
  @@map("user_round")
}

model UserRoundGuess {
  id String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid

  userPromt   String
  temperature Int
  guessesWord String?

  userRound           UserRound @relation(fields: [userRoundUserWallet, userRoundRoundId], references: [userWallet, roundId])
  userRoundUserWallet String
  userRoundRoundId    String    @db.Uuid

  @@map("user_round_guess")
}

model IndexedEvent {
  id String @id

  @@map("indexed_event")
}
